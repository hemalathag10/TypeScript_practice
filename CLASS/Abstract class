// Abstract class
abstract class Shape {
  protected color: string;

  constructor(color: string) {
      this.color = color;
  }

  // Abstract method
  abstract calculateArea(): number;

  display(): void {
      console.log(`This is a ${this.color} color.`);
  }
}

// Concrete class Circle extending the abstract class
class Circle extends Shape {
  private radius: number;

  constructor(color: string, radius: number) {
      super(color);
      this.radius = radius;
  }

  // Implementing the abstract method
  calculateArea(): number {
      return Math.PI * this.radius ** 2;
  }
}

// Concrete class Rectangle extending the abstract class
class Rectangle extends Shape {
  private width: number;
  private height: number;

  constructor(color: string, width: number, height: number) {
      super(color);
      this.width = width;
      this.height = height;
  }

  // Implementing the abstract method
  calculateArea(): number {
      return this.width * this.height;
  }
}

// Usage
const redCircle = new Circle("red", 5);
const blueRectangle = new Rectangle("blue", 4, 6);

redCircle.display();
console.log(`Area of the circle: ${redCircle.calculateArea()}`);

blueRectangle.display();
console.log(`Area of the rectangle: ${blueRectangle.calculateArea()}`);
------------------------------------------------------
This is a red shape.
Area of the circle: 78.53981633974483
This is a blue shape.
Area of the rectangle: 24
